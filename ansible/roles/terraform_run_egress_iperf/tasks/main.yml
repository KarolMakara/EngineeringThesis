---
- name: Find old iperf files for specific CNI
  find:
    paths: "/mnt/kind/{{ scenario_folder }}"
    patterns: "*{{ cni_name }}*"
  register: files_to_remove
  when: "'egress' in scenario"

- name: Remove old iperf files for specific CNI
  become: true
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_remove.files }}"
  when: "'egress' in scenario and files_to_remove.matched > 0"

- name: Fillup terraform config
  template:
    src: ../terraform/egress_gateway/iperf-client.tf.j2
    dest: ../terraform/egress_gateway/iperf-client.tf

- name: Run iperf3 locally
  shell: iperf3 -s > /tmp/iperf3_output.log &
  async: 1
  poll: 0
  when: type == "tcp"

- name: Run iperf3 in container
  shell: docker run --rm --name iperf3-server --network kind -p 5201:5201 -p 5201:5201/udp networkstatic/iperf3 -s
  async: 1
  poll: 0
  when: type == "udp"

- name: Get IP address of Docker container
  shell: |
    sleep 5
    docker inspect -f '{{"{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}"}}' iperf3-server
  register: container_ip
  when: type == "udp"

- name: Log curr time for scraping
  shell: date -u +"%Y-%m-%dT%H:%M:%SZ"
  register: start_run

- name: Run egress
  shell: terraform -chdir=../terraform/egress_gateway apply -auto-approve
  environment:
    TF_VAR_cni_name: "{{ cni_name }}"
    TF_VAR_real_host_ip: "{{ container_ip.stdout }}"
    TF_VAR_scenario: "{{ scenario }}"
    TF_VAR_test_duration: "{{ test_duration }}"
    TF_VAR_volume_mount_path: "{{ volume_mount_path }}"
  when: type == "udp"

- name: Run egress
  shell: terraform -chdir=../terraform/egress_gateway apply -auto-approve
  environment:
    TF_VAR_cni_name: "{{ cni_name }}"
    TF_VAR_real_host_ip: "{{ real_host_ip }}"
    TF_VAR_scenario: "{{ scenario }}"
    TF_VAR_test_duration: "{{ test_duration }}"
    TF_VAR_volume_mount_path: "{{ volume_mount_path }}"
  when: type == "tcp"

- name: Wait for the test duration plus 10 seconds
  pause:
    seconds: "{{ test_duration | int + 10 }}"

- name: Log curr time for scraping
  shell: date -u +"%Y-%m-%dT%H:%M:%SZ"
  register: end_run

- name: Kill iperf3 server process
  shell: pkill -f "iperf3 -s"
  when: type == "tcp"

- name: Kill iperf3 server process
  shell: docker rm -f iperf3-server
  when: type == "udp"

- name: Destroy egress
  shell: terraform -chdir=../terraform/egress_gateway destroy -auto-approve
  environment:
    TF_VAR_cni_name: "{{ cni_name }}"
    TF_VAR_real_host_ip: "{{ container_ip.stdout }}"
    TF_VAR_scenario: "{{ scenario }}"
    TF_VAR_test_duration: "{{ test_duration }}"
    TF_VAR_volume_mount_path: "{{ volume_mount_path }}"
  when: type == "udp"

- name: Destroy egress
  shell: terraform -chdir=../terraform/egress_gateway destroy -auto-approve
  environment:
    TF_VAR_cni_name: "{{ cni_name }}"
    TF_VAR_real_host_ip: "{{ real_host_ip }}"
    TF_VAR_scenario: "{{ scenario }}"
    TF_VAR_test_duration: "{{ test_duration }}"
    TF_VAR_volume_mount_path: "{{ volume_mount_path }}"
  when: type == "tcp"
