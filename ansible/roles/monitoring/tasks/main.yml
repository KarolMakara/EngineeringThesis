- name: Register cilium prometheus.yml
  shell: cat roles/monitoring/templates/cilium_prometheus.yml
  register: prom_config

- name: Fillup config from template
  template:
    src: roles/monitoring/templates/prometheus_config_map.yml.j2
    dest: /tmp/monitoring.yml.j2
  vars:
    prometheus_config: "{{ prom_config.stdout }}"

- name: Get ip base
  shell: kubectl get nodes -o wide | grep control-plane | awk '{ print $6 }'  | tail -n 1
  register: ip_1

- name: Get ip base
  shell: kubectl get nodes -o wide | grep worker | grep -v worker2 | awk '{ print $6 }'  | tail -n 1
  register: ip_2

- name: Get ip base
  shell: kubectl get nodes -o wide | grep worker2 | awk '{ print $6 }'  | tail -n 1
  register: ip_3

- name: Fillup config from template
  template:
    src: /tmp/monitoring.yml.j2
    dest: /tmp/config_map.yml
  vars:
    ip_addr_1: "{{ ip_1.stdout }}"
    ip_addr_2: "{{ ip_2.stdout }}"
    ip_addr_3: "{{ ip_3.stdout }}"

- name: Load configmap with dashboards and victoria metrics using terraform
  shell: terraform -chdir="roles/monitoring/templates/terraform" apply -auto-approve

- name: Create yaml
  shell: cat roles/monitoring/templates/monitoring.yml > /tmp/monitoring.yml

- name: Append prometheus
  shell: cat /tmp/config_map.yml >> /tmp/monitoring.yml

- name: Append node_exporter
  shell: cat roles/monitoring/templates/node_exporter.yml >> /tmp/monitoring.yml

- name: Taint cplane node
  shell: kubectl taint nodes kind-control-plane node-role.kubernetes.io/control-plane-
  when: env_type == "local"
  ignore_errors: true

- name: Apply /tmp/monitoring.yml
  shell: kubectl apply -f /tmp/monitoring.yml

# - name: Apply cadvisor
#   shell: kubectl apply -f roles/monitoring/templates/cadvisor.yml

- name: Wait until prometheus ready
  shell: kubectl wait --timeout=5m -n monitoring deployment/prometheus --for=condition=Available
