---
- name: Delete network before cluster creation
  shell: docker network rm -f 0x5f3759df

- name: Get current dir for volume mount
  set_fact:
    current_dir: "{{ lookup('pipe', 'pwd') }}"

- name: Generate server index array
  set_fact:
    server_index_array: "{{ range(0, k3d_servers) | map('string') | join(',') }}"

- name: Generate cluster name
  set_fact:
    cluster_name: "{{ cluster_name_prefix }}-{{ cni_name }}-{{ scenario }}"

- name: Set k3d create cluster command
  set_fact:
    k3d_command: >-
      k3d cluster create {{ cluster_name }}
      --servers {{ k3d_servers }}
      --agents {{ k3d_agents }}
      --network 0x5f3759df
      --volume /mnt/k3d:/host_shared_data
      {% if disable_servicelb %}
      --no-lb
      {% endif %}
      {% if mount_entrypoint %}
      --volume {{ mount_entrypoint_path }}
      {% endif %}
      --image {{ k3d_image }}
      {% if disable_network_policy %}
      --k3s-arg "--disable-network-policy@server:{{ server_index_array }}"
      {% endif %}
      {% if disable_servicelb %}
      --k3s-arg "--disable=servicelb@server:{{ server_index_array }}"
      {% endif %}
      {% if disable_traefik %}
      --k3s-arg "--disable=traefik@server:{{ server_index_array }}"
      {% endif %}
      {% if disable_flannel_backend %}
      --k3s-arg "--flannel-backend=none@server:{{ server_index_array }}"
      {% endif %}
      {% if disable_kube_proxy %}
      --k3s-arg "--disable=kube-proxy@server:{{ server_index_array }}"
      {% endif %}

- name: Create cluster
  command: "{{ k3d_command }}"
  ignore_errors: true

- name: Register cluster network id
  shell: k3d cluster list -o json | jq -r --arg name "{{ cluster_name }}" '.[] | select(.name == $name) | .nodes | first | .runtimeLabels["k3d.cluster.network.id"]'
  register: cluster_network_id
  changed_when: false

- name: Fail if cluster network id is empty
  fail:
    msg: "Could not obtain cluster ip range for {{ cluster_name }}.  "
  when: cluster_network_id.stdout == ""

- name: Write network id to cfg file
  shell: echo {{ cluster_network_id.stdout }} > {{ current_dir }}/../cluster_network.cfg
